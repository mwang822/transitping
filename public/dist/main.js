(()=>{const e=document.getElementById("trainResponse"),t=document.getElementById("busResponse"),n=document.getElementById("status");function o(e,t){const n=new URLSearchParams;return n.append("wayPoint.1",`${e.lat},${e.lon}`),n.append("wayPoint.2",`${t.lat},${t.lon}`),n.append("ra","routeSummariesOnly"),n.append("key","AgABNf69TNOhfktEdaM_VXgsALbx4Rt4ih00qLabWszbrukFBCOS_LSDD1iZRWar"),fetch(`https://dev.virtualearth.net/REST/v1/Routes/walking?${n.toString()}`)}function a(e){for(var t in res="",e){let n="";for(let o=0;o<Math.min(e[t].length,4);o++)n+=`${e[t][o]}, `;n=n.substring(0,n.length-2),res+=`<p>Route: ${t}&nbsp;&nbsp;&nbsp;ETA: ${n} mins</p>`}return res}document.querySelector("#toggle-button").addEventListener("click",(function(){const e=document.querySelector(".train-view"),t=document.querySelector(".bus-view");"none"===e.style.display?(e.style.display="block",t.style.display="none"):(e.style.display="none",t.style.display="block")})),async function(){let s=await new Promise((function(e,t){navigator.geolocation.getCurrentPosition(e,t)}));userCoords={lat:s.coords.latitude,lon:s.coords.longitude},n.innerHTML="Got user location! Getting transit data...";let i=await function(e){const t=new URLSearchParams;return t.append("lat",e.lat),t.append("lon",e.lon),fetch(`https://transitping-mtapi.onrender.com/by-location?${t.toString()}`)}(userCoords),r=await i.json();r=r.data;let p="";for(let e=0;e<3;e++){let t,n,i={},l={};t=r[e].N,n=r[e].S,walkTimeRes=await o({lat:s.coords.latitude,lon:s.coords.longitude},{lat:r[e].location[0],lon:r[e].location[1]});let u=await walkTimeRes.json(),c=Math.round(u.resourceSets[0].resources[0].travelDuration/60);p+=`<h2 class="station-name">${r[e].name}&nbsp;&nbsp;&nbsp;&nbsp;&#128694;${c}mins</h2>`,p+='<div class="direction north">',p+="<p>Northbound Trains</p>";for(let n=0;n<t.length;n++){let o=Math.round((new Date(t[n].time)-Date.now())/6e4);r[e].N[n].route in i?i[r[e].N[n].route].push(o):i[r[e].N[n].route]=[o]}p+=a(i),p+='<div class="direction south">',p+="<p>Southbound Trains</p>";for(let e=0;e<n.length;e++){let t=Math.round((new Date(n[e].time)-Date.now())/6e4);n[e].route in l?l[n[e].route].push(t):l[n[e].route]=[t]}p+=a(l),p+="</div>",p+="</div>"}n.remove(),e.innerHTML=`${p}`,p="<h1>Nearby Bus Stops</h1>",busData=await async function(e){params=new URLSearchParams,params.append("lat",`${e.lat}`),params.append("lon",`${e.lon}`),params.append("latSpan",.005),params.append("longSpan",.005),params.append("key","d7cdf7f2-042c-4657-993f-97823a8bd34d"),nearbyStops=await(await fetch(`https://bustime.mta.info/api/where/stops-for-location.json?${params.toString()}`)).json(),nearbyStops=nearbyStops.data.stops,console.log(nearbyStops);const t={};for(let e=0;e<Math.min(4,nearbyStops.length);e++)params=new URLSearchParams,params.append("version",2),params.append("StopMonitoringDetailLevel","minimum"),params.append("key","d7cdf7f2-042c-4657-993f-97823a8bd34d"),params.append("MonitoringRef",nearbyStops[e].code),stopRes=await fetch(`https://bustime.mta.info/api/siri/stop-monitoring.json?${params.toString()}`),stopRes=await stopRes.json(),stopRes=stopRes.Siri.ServiceDelivery.StopMonitoringDelivery[0].MonitoredStopVisit,t[nearbyStops[e].name]=stopRes;return t}(userCoords),upcomingBuses={};for(let e in busData){upcomingBuses[e]={},console.log(busData[e]);for(let t=0;t<busData[e].length;t++)bus_i=busData[e][t].MonitoredVehicleJourney,bus_i.PublishedLineName[0]in upcomingBuses[e]?upcomingBuses[e][bus_i.PublishedLineName[0]][1].push(bus_i.MonitoredCall.ArrivalProximityText):(upcomingBuses[e][bus_i.PublishedLineName[0]]=[[bus_i.DestinationName[0]],[bus_i.MonitoredCall.ArrivalProximityText]],console.log(upcomingBuses))}for(let e in upcomingBuses){p+='<div class="station">',p+=`<h2>${e}</h2>`;for(let t in upcomingBuses[e]){p+=`<p>${t} ---\x3e ${upcomingBuses[e][t][0]}</p>`,eta="";for(let n=0;n<Math.min(3,upcomingBuses[e][t][1].length);n++)eta+=`${upcomingBuses[e][t][1][n]}, `;p+=`<p>ETA: ${eta.substring(0,eta.length-2)}</p>`}p+="</div>",console.log(p)}t.innerHTML=p}().catch((e=>n.innerHTML=e))})();