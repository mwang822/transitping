(()=>{const t=document.getElementById("status"),e=(document.getElementById("container"),document.querySelector(".toggle-button")),n=document.querySelector(".bus-view"),a=document.querySelector(".train-view");function o(t,e){const n=new URLSearchParams;return n.append("wayPoint.1",`${t.lat},${t.lon}`),n.append("wayPoint.2",`${e.lat},${e.lon}`),n.append("ra","routeSummariesOnly"),n.append("key","AgABNf69TNOhfktEdaM_VXgsALbx4Rt4ih00qLabWszbrukFBCOS_LSDD1iZRWar"),fetch(`https://dev.virtualearth.net/REST/v1/Routes/walking?${n.toString()}`)}function s(t){for(var e in res="",t){let n="";for(let a=0;a<Math.min(t[e].length,4);a++)n+=`${t[e][a]}, `;n=n.substring(0,n.length-2),res+=`<p>Route: ${e}&nbsp;&nbsp;&nbsp;ETA: ${n} mins</p>`}return res}e.addEventListener("click",(()=>{a.classList.toggle("active"),n.classList.toggle("active"),setTimeout((()=>{a.classList.toggle("slide"),n.classList.toggle("slide")}),300)})),async function(){let e=await new Promise((function(t,e){navigator.geolocation.getCurrentPosition(t,e)}));userCoords={lat:e.coords.latitude,lon:e.coords.longitude},t.innerHTML="Got user location! Getting transit data...";let i=await function(t){const e=new URLSearchParams;return e.append("lat",t.lat),e.append("lon",t.lon),fetch(`https://transitping-mtapi.onrender.com/by-location?${e.toString()}`)}(userCoords),r=await i.json();r=r.data;let p="";for(let t=0;t<3;t++){let n,a,i={},l={};n=r[t].N,a=r[t].S,walkTimeRes=await o({lat:e.coords.latitude,lon:e.coords.longitude},{lat:r[t].location[0],lon:r[t].location[1]});let u=await walkTimeRes.json(),c=Math.round(u.resourceSets[0].resources[0].travelDuration/60);p+=`<h2 class="station-name">${r[t].name}&nbsp;&nbsp;&nbsp;&nbsp;&#128694;${c}mins</h2>`,p+='<div class="direction north">',p+="<p>Northbound Trains</p>";for(let e=0;e<n.length;e++){let a=Math.round((new Date(n[e].time)-Date.now())/6e4);r[t].N[e].route in i?i[r[t].N[e].route].push(a):i[r[t].N[e].route]=[a]}p+=s(i),p+='<div class="direction south">',p+="<p>Southbound Trains</p>";for(let t=0;t<a.length;t++){let e=Math.round((new Date(a[t].time)-Date.now())/6e4);a[t].route in l?l[a[t].route].push(e):l[a[t].route]=[e]}p+=s(l),p+="</div>",p+="</div>"}t.remove(),a.innerHTML=`${p}`,p="<h1>Nearby Bus Stops</h1>",busData=await async function(t){params=new URLSearchParams,params.append("lat",`${t.lat}`),params.append("lon",`${t.lon}`),params.append("latSpan",.005),params.append("longSpan",.005),params.append("key","d7cdf7f2-042c-4657-993f-97823a8bd34d"),nearbyStops=await(await fetch(`https://bustime.mta.info/api/where/stops-for-location.json?${params.toString()}`)).json(),nearbyStops=nearbyStops.data.stops,console.log(nearbyStops);const e={};for(let t=0;t<Math.min(4,nearbyStops.length);t++)params=new URLSearchParams,params.append("version",2),params.append("StopMonitoringDetailLevel","minimum"),params.append("key","d7cdf7f2-042c-4657-993f-97823a8bd34d"),params.append("MonitoringRef",nearbyStops[t].code),stopRes=await fetch(`https://bustime.mta.info/api/siri/stop-monitoring.json?${params.toString()}`),stopRes=await stopRes.json(),stopRes=stopRes.Siri.ServiceDelivery.StopMonitoringDelivery[0],"MonitoredStopVisit"in stopRes&&(e[nearbyStops[t].name]=stopRes.MonitoredStopVisit);return e}(userCoords),upcomingBuses={};for(let t in busData){upcomingBuses[t]={},console.log(busData);for(let e=0;e<busData[t].length;e++)bus_i=busData[t][e].MonitoredVehicleJourney,bus_i.PublishedLineName[0]in upcomingBuses[t]?upcomingBuses[t][bus_i.PublishedLineName[0]][1].push(bus_i.MonitoredCall.ArrivalProximityText):upcomingBuses[t][bus_i.PublishedLineName[0]]=[[bus_i.DestinationName[0]],[bus_i.MonitoredCall.ArrivalProximityText]]}for(let t in upcomingBuses){p+='<div class="station">',p+=`<h2>${t}</h2>`;for(let e in upcomingBuses[t]){p+=`<p>${e} ---\x3e ${upcomingBuses[t][e][0]}</p>`,eta="";for(let n=0;n<Math.min(3,upcomingBuses[t][e][1].length);n++)eta+=`${upcomingBuses[t][e][1][n]}, `;p+=`<p>ETA: ${eta.substring(0,eta.length-2)}</p>`}p+="</div>",console.log(p)}n.innerHTML=p}().catch((e=>t.innerHTML=e))})();